version: '3'

services:
  db-monolith-master:
    image: postgres:15.1
    container_name: db-monolith
    restart: unless-stopped
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=master
    volumes:
      - ./monolith/db/master/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
  monolith:
    image: ghcr.io/iakovalenko-highload-architect/monolith:latest
    container_name: monolith
    restart: unless-stopped
    volumes:
      - ./monolith/.env:/project/.env
    networks:
      - app-network
    ports:
      - "8080:8080"
#  db-dialog:
#    image: postgres:15.1
#    container_name: db-dialog
#    restart: unless-stopped
#    environment:
#      - POSTGRES_HOST_AUTH_METHOD=trust
#      - POSTGRES_DB=master
#    volumes:
#      - ./service-dialog/db/master/init.sql:/docker-entrypoint-initdb.d/init.sql
#    networks:
#      - service-dialog-network
  service-dialog:
    image: ghcr.io/iakovalenko-highload-architect/service-dialog:latest
    container_name: service-dialog
    restart: unless-stopped
    volumes:
      - ./service-dialog/.env:/project/.env
    networks:
      - service-dialog-network
      - app-network
  master:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_master"
    image: "citusdata/citus:12.1.2"
    labels: [ "com.citusdata.role=Master" ]
    environment: &AUTH
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${POSTGRES_USER:-postgres}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"
#    volumes:
#      - ./service-dialog/db/master/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - service-dialog-network
  worker:
    image: "citusdata/citus:12.1.2"
    labels: [ "com.citusdata.role=Worker" ]
    depends_on: [ manager ]
    environment: *AUTH
    command: "/wait-for-manager.sh"
    volumes:
      - healthcheck-volume:/healthcheck
    networks:
      - service-dialog-network
  manager:
    container_name: "${COMPOSE_PROJECT_NAME:-citus}_manager"
    image: "citusdata/membership-manager:0.3.0"
    volumes:
      - "${DOCKER_SOCK:-/var/run/docker.sock}:/var/run/docker.sock"
      - healthcheck-volume:/healthcheck
    depends_on: [ master ]
    environment: *AUTH
    networks:
      - service-dialog-network
networks:
  app-network:
  service-dialog-network:
volumes:
  healthcheck-volume: